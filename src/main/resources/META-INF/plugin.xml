<idea-plugin version="2">
  <id>io.github.liias.monkey</id>
  <name>Monkey C (Garmin Connect IQ)</name>
  <!-- this version is overridden on gradle building and is
  specified in gradle.properties as  pluginVersion -->
  <version>0.2.5</version>
  <vendor email="madisliias@gmail.com" url="https://liias.github.io">Madis Liias</vendor>

  <description><![CDATA[
      Unofficial support for Monkey C language and Garmin Connect IQ SDK
    ]]></description>

  <change-notes><![CDATA[
    <p>0.2.5</p>
    <ul>
      <li>Support developer key introduced in Connect IQ SDK 1.3 and 2.1</li>
    </ul>

    <a href="https://github.com/liias/monkey/blob/master/CHANGELOG.md#changelog">Full change log...</a>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="141.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!-- IDE Configuration -->
    <applicationConfigurable groupId="build" displayName="Connect IQ" id="monkeyc.settings"
                             instance="io.github.liias.monkey.ide.conf.MonkeyConfigurable"/>

    <applicationService serviceImplementation="io.github.liias.monkey.ide.conf.MonkeyOptions"/>

    <!-- Monkey C language -->
    <fileTypeFactory implementation="io.github.liias.monkey.lang.file.MonkeyFileTypeFactory"/>
    <lang.parserDefinition language="MonkeyC"
                           implementationClass="io.github.liias.monkey.lang.parser.MonkeyParserDefinition"/>

    <lang.findUsagesProvider language="MonkeyC"
                             implementationClass="io.github.liias.monkey.lang.ide.findUsages.MonkeyFindUsagesProvider"/>

    <lang.refactoringSupport language="MonkeyC"
                             implementationClass="io.github.liias.monkey.lang.ide.refactoring.MonkeyRefactoringSupportProvider"/>

    <completion.contributor language="MonkeyC"
                            implementationClass="io.github.liias.monkey.lang.ide.completion.MonkeyCompletionContributor"/>

    <!-- Nice to have stuff -->
    <gotoClassContributor implementation="io.github.liias.monkey.lang.ide.navigation.MonkeyGoToClassContributor"/>

    <gotoSymbolContributor implementation="io.github.liias.monkey.lang.ide.navigation.MonkeyGoToSymbolContributor"/>

    <codeInsight.parameterInfo language="MonkeyC"
                               implementationClass="io.github.liias.monkey.lang.ide.parameterInfo.MonkeyParameterInfoHandler"/>

    <lang.documentationProvider language="MonkeyC"
                                implementationClass="io.github.liias.monkey.lang.documentation.MonkeyDocumentationProvider"/>

    <lang.syntaxHighlighterFactory language="MonkeyC"
                                   implementationClass="io.github.liias.monkey.lang.highlighting.MonkeySyntaxHighlighterFactory"/>

    <lang.psiStructureViewFactory language="MonkeyC"
                                  implementationClass="io.github.liias.monkey.lang.ide.structure.MonkeyStructureViewFactory"/>

    <lang.braceMatcher language="MonkeyC" implementationClass="io.github.liias.monkey.lang.ide.MonkeyBraceMatcher"/>

    <lang.commenter language="MonkeyC" implementationClass="io.github.liias.monkey.lang.ide.MonkeyCommenter"/>


    <!-- Module stuff -->
    <sdkType implementation="io.github.liias.monkey.project.sdk.MonkeySdkType"/>

    <moduleType id="MONKEY_C_MODULE" implementationClass="io.github.liias.monkey.project.module.MonkeyModuleType"/>

    <moduleConfigurationEditorProvider
        implementation="io.github.liias.monkey.project.configuration.MonkeyModuleEditorsProvider"
        order="first"/>

    <projectTemplatesFactory
        implementation="io.github.liias.monkey.project.ui.module.newProject.MonkeyProjectTemplatesFactory"/>

    <projectStructureDetector implementation="io.github.liias.monkey.project.MonkeyProjectStructureDetector"/>

    <internalFileTemplate name="Monkey C File"/>

    <!-- run application -->
    <programRunner id="MonkeyCRunner" implementation="io.github.liias.monkey.project.runconfig.MonkeyProgramRunner"/>
    <runConfigurationProducer
        implementation="io.github.liias.monkey.project.runconfig.running.MonkeyModuleConfigurationProducer"/>
    <runConfigurationProducer
        implementation="io.github.liias.monkey.project.runconfig.testing.MonkeyTestModuleConfigurationProducer"/>
    <configurationType implementation="io.github.liias.monkey.project.runconfig.running.MonkeyConfigurationType"/>
    <configurationType implementation="io.github.liias.monkey.project.runconfig.testing.MonkeyTestConfigurationType"/>
    <moduleExtension implementation="io.github.liias.monkey.project.configuration.TargetDeviceModuleExtension"/>

    <!-- xml file parsers -->

    <!-- App's manifest.xml -->
    <dom.fileDescription implementation="io.github.liias.monkey.project.dom.manifest.ManifestDomFileDescription"/>

    <standardResourceProvider implementation="io.github.liias.monkey.project.dom.ManifestResourceProvider"/>

    <!-- SDK's projectInfo.xml -->
    <dom.fileDescription
        implementation="io.github.liias.monkey.project.dom.sdk.projectinfo.ProjectInfoDomFileDescription"/>

    <localInspection language="XML"
                     implementationClass="io.github.liias.monkey.project.dom.manifest.ManifestDomInspection"
                     displayName="manifest.xml" groupPath="MonkeyC" groupName="manifest.xml" enabledByDefault="true"
                     level="ERROR"/>

    <!-- classpath: needed for plugin deployment to export a zip archive
        * semicolon-separated list of paths which should be added to the classpath of the compile server.
        * The paths are relative to the plugin 'lib' directory.
        * In the development mode the name of each file without extension is treated as a module name and the output
         directory of the module is added to the classpath.
         If such file doesn't exists the jar is searched under 'lib'  directory of the plugin sources home directory.
         -->
    <compileServer.plugin classpath="jps-plugin.jar"/>
  </extensions>

  <project-components>
    <component>
      <implementation-class>io.github.liias.monkey.project.MonkeyProjectListener</implementation-class>
    </component>
  </project-components>

  <actions>
    <action id="Monkey.NewMonkeyFile" class="io.github.liias.monkey.ide.actions.CreateMonkeyFileAction"
            text="Monkey C File" description="Create new Monkey C source file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>

    <group id="ConnectIqActionGroup" text="Connect I_Q" description="Garmin Connect IQ specific actions" popup="true">
      <action id="Monkey.AppSettings"
              class="io.github.liias.monkey.ide.actions.appsettings.AppSettingsAction"
              description="App Settings Editor aka Object Store"/>

      <action id="Monkey.ApiDoc"
              class="io.github.liias.monkey.ide.actions.ApiDocsAction"
              description="Open API documentation in a browser"/>

      <add-to-group group-id="MainMenu" relative-to-action="HelpMenu" anchor="before"/>
    </group>

  </actions>

</idea-plugin>