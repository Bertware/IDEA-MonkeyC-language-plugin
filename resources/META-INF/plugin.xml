<idea-plugin version="2">
  <id>io.github.liias.monkey</id>
  <name>Monkey C (Garmin Connect IQ)</name>
  <version>0.2</version>
  <vendor email="madisliias@gmail.com" url="https://liias.github.io">Madis Liias</vendor>

  <description><![CDATA[
      Unofficial support for Monkey C language and Garmin Connect IQ SDK
    ]]></description>

  <change-notes><![CDATA[
    <p>0.1.3</p>
    <ul>
      <li>Reworked language part - references and declarations now somewhat work in same file</li>
    </ul>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="141.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!-- Important stuff -->
    <fileTypeFactory implementation="io.github.liias.monkey.lang.file.MonkeyFileTypeFactory"/>
    <lang.parserDefinition language="MonkeyC"
                           implementationClass="io.github.liias.monkey.lang.parser.MonkeyParserDefinition"/>

    <lang.findUsagesProvider language="MonkeyC"
                             implementationClass="io.github.liias.monkey.lang.ide.findUsages.MonkeyFindUsagesProvider"/>

    <lang.refactoringSupport language="MonkeyC"
                             implementationClass="io.github.liias.monkey.lang.ide.refactoring.MonkeyRefactoringSupportProvider"/>

    <completion.contributor language="MonkeyC"
                            implementationClass="io.github.liias.monkey.lang.ide.completion.MonkeyCompletionContributor"/>

    <!-- Nice to have stuff -->
    <lang.documentationProvider language="MonkeyC"
                                implementationClass="io.github.liias.monkey.lang.documentation.MonkeyDocumentationProvider"/>

    <lang.syntaxHighlighterFactory language="MonkeyC"
                                   implementationClass="io.github.liias.monkey.lang.highlighting.MonkeySyntaxHighlighterFactory"/>

    <lang.psiStructureViewFactory language="MonkeyC"
                                  implementationClass="io.github.liias.monkey.lang.ide.structure.MonkeyStructureViewFactory"/>

    <lang.commenter language="MonkeyC" implementationClass="io.github.liias.monkey.lang.ide.MonkeyCommenter"/>


    <!-- Module stuff -->
    <sdkType implementation="io.github.liias.monkey.project.sdk.MonkeySdkType"/>

    <moduleType id="MONKEY_C_MODULE" implementationClass="io.github.liias.monkey.project.module.MonkeyModuleType"/>

    <moduleConfigurationEditorProvider
        implementation="io.github.liias.monkey.project.configuration.MonkeyModuleEditorsProvider"
        order="first"/>

    <projectTemplatesFactory
        implementation="io.github.liias.monkey.project.ui.module.newProject.MonkeyProjectTemplatesFactory"/>

    <projectStructureDetector implementation="io.github.liias.monkey.project.MonkeyProjectStructureDetector"/>

    <internalFileTemplate name="Monkey C File"/>

    <!-- run application -->
    <programRunner id="MonkeyCRunner" implementation="io.github.liias.monkey.project.runconfig.MonkeyProgramRunner"/>
    <runConfigurationProducer
        implementation="io.github.liias.monkey.project.runconfig.MonkeyModuleConfigurationProducer"/>
    <configurationType implementation="io.github.liias.monkey.project.runconfig.MonkeyConfigurationType"/>
    <moduleExtension implementation="io.github.liias.monkey.project.configuration.TargetDeviceModuleExtension"/>

    <!-- xml file parsers -->

    <!-- App's manifest.xml -->
    <dom.fileDescription implementation="io.github.liias.monkey.project.dom.manifest.ManifestDomFileDescription"/>

    <!-- SDK's projectInfo.xml -->
    <dom.fileDescription
        implementation="io.github.liias.monkey.project.dom.sdk.projectinfo.ProjectInfoDomFileDescription"/>

    <localInspection language="XML"
                     implementationClass="io.github.liias.monkey.project.dom.manifest.ManifestDomInspection"
                     displayName="manifest.xml" groupPath="MonkeyC" groupName="manifest.xml" enabledByDefault="true"
                     level="ERROR"/>

    <!-- classpath: needed for plugin deployment to export a zip archive
        * semicolon-separated list of paths which should be added to the classpath of the compile server.
        * The paths are relative to the plugin 'lib' directory.
        * In the development mode the name of each file without extension is treated as a module name and the output
         directory of the module is added to the classpath.
         If such file doesn't exists the jar is searched under 'lib'  directory of the plugin sources home directory.
         -->
    <compileServer.plugin classpath="jps-plugin.jar"/>
  </extensions>

  <actions>
    <action id="Monkey.NewMonkeyFile" class="io.github.liias.monkey.ide.actions.CreateMonkeyFileAction"
            text="Monkey C File" description="Create new Monkey C source file">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>
  </actions>

</idea-plugin>